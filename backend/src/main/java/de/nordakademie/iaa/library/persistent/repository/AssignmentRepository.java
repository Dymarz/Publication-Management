package de.nordakademie.iaa.library.persistent.repository;

import de.nordakademie.iaa.library.persistent.entities.Assignment;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import java.util.Date;
import java.util.List;
import java.util.UUID;

/**
 * This repository is for managing the database access to the assignment table.
 * This is only an interface. The repository will be generated by spring data.
 */
@Repository
public interface AssignmentRepository extends CustomBaseRepository<Assignment, UUID> {


    /**
     * This will overwrite the findAll method so that it returns a list and not an iterable
     */
    @Override
    List<Assignment> findAll();


    /**
     * find all by publication
     *
     * @param key publication key
     * @return List of assignments that are returned
     */
    List<Assignment> findAllByPublication_Key(String key);


    /**
     * find all that are not returned
     *
     * @param now Date right now
     * @return List of assignments that are not returned
     */
    @Query("SELECT a FROM Assignment a WHERE (a.dateOfReturn IS NULL and a.publicationLoss = false) OR a.dateOfReturn > :now")
    List<Assignment> findAllUnreturned(@Param("now") Date now);

    /**
     * find all that are not returned by publication key
     *
     * @param now Date right now
     * @param key publication key
     * @return List of assignments that are returned
     */
    @Query("SELECT a FROM Assignment a WHERE ((a.dateOfReturn IS NULL and a.publicationLoss = false) OR a.dateOfReturn > :now) AND a.publication.key = :key")
    List<Assignment> findAllUnreturnedByPublication_Key(@Param("now") Date now,@Param("key") String key);
}
