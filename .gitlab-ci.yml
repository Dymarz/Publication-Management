# Quelle: https://medium.com/geekculture/setup-gitlab-ci-pipeline-for-angular-9cce853ef281
stages:
  - dependencies
  - test
  - build

frontend_install_dependencies:
  image: node:18.12.1-alpine3.16
  stage: dependencies
  interruptible: true
  script:
    - cd frontend
    - npm install
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - frontend/node_modules

frontend_lint:
  image: node:18.12.1-alpine3.16
  stage: test
  interruptible: true
  script:
    - cd frontend
    - npm link @angular/cli@14.2.6
    - ng lint
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - frontend/node_modules
    policy: pull

frontend_test:
  image: trion/ng-cli-karma:14.2.6
  stage: test
  interruptible: true
  script:
    - cd frontend
    - npm link @angular/cli@14.2.6
    - ng test --watch=false
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - frontend/node_modules
    policy: pull

backend_verify:
  image: maven:3.8.6-openjdk-18-slim
  stage: test
  interruptible: true
  script:
    - cd backend
    - mvn verify

frontend_build:
  image: node:18.12.1-alpine3.16
  stage: build
  interruptible: true
  script:
    - cd frontend
    - npm link @angular/cli@14.2.6
    - npm run build
  cache:
    key:
      files:
        - package-lock.json
    paths:
      - frontend/node_modules
    policy: pull

documentation_build:
  image: texlive/texlive:latest
  stage: build
  interruptible: true
  script:
    - cd documentation
    - latexmk -pdf
  artifacts:
    paths:
      - documentation/hausarbeit.pdf
